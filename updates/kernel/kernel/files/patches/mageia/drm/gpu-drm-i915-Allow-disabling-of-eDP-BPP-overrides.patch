From 0296bb0a6d110de2ecfad871ffa67da914a7b695 Mon Sep 17 00:00:00 2001
From: Colin Guthrie <colin@mageia.org>
Date: Mon, 2 Sep 2013 17:40:57 +0100
Subject: [PATCH 2/2] Allow disabling of eDP BPP overrides.

From https://bugzilla.kernel.org/show_bug.cgi?id=59841#c101
---
 drivers/gpu/drm/i915/i915_drv.c      |  4 ++++
 drivers/gpu/drm/i915/i915_drv.h      |  2 ++
 drivers/gpu/drm/i915/intel_display.c | 13 +++++++++++++
 drivers/gpu/drm/i915/intel_dp.c      |  2 +-
 4 files changed, 20 insertions(+), 1 deletion(-)

diff -Nurp linux-3.10.10.0001/drivers/gpu/drm/i915/i915_drv.c linux-3.10.10.0002/drivers/gpu/drm/i915/i915_drv.c
--- linux-3.10.10.0001/drivers/gpu/drm/i915/i915_drv.c	2013-09-03 12:34:53.794769399 +0300
+++ linux-3.10.10.0002/drivers/gpu/drm/i915/i915_drv.c	2013-09-03 12:37:54.198612509 +0300
@@ -132,6 +132,10 @@ int i915_disable_pch_pwm __read_mostly =
 module_param_named(disable_pch_pwm, i915_disable_pch_pwm, int, 0600);
 MODULE_PARM_DESC(disable_pch_pwm, "disable PCH_PWM (default: -1 (auto))");
 
+bool i915_ignore_edp_bpp __read_mostly = false;
+module_param_named(ignore_edp_bpp, i915_ignore_edp_bpp, bool, 0600);
+MODULE_PARM_DESC(ignore_edp_bpp, "Ignore BDB edp BPP value (default: false)");
+
 static struct drm_driver driver;
 extern int intel_agp_enabled;
 
diff -Nurp linux-3.10.10.0001/drivers/gpu/drm/i915/i915_drv.h linux-3.10.10.0002/drivers/gpu/drm/i915/i915_drv.h
--- linux-3.10.10.0001/drivers/gpu/drm/i915/i915_drv.h	2013-09-03 12:36:28.066785184 +0300
+++ linux-3.10.10.0002/drivers/gpu/drm/i915/i915_drv.h	2013-09-03 12:37:54.218612933 +0300
@@ -492,6 +492,7 @@ enum intel_sbi_destination {
 #define QUIRK_LVDS_SSC_DISABLE (1<<1)
 #define QUIRK_INVERT_BRIGHTNESS (1<<2)
 #define QUIRK_NO_PCH_PWM_ENABLE (1<<3)
+#define QUIRK_INCORRECT_EDP_BPP_ENABLE (1<<4)
 
 struct intel_fbdev;
 struct intel_fbc_work;
@@ -1437,6 +1438,7 @@ extern int i915_enable_ppgtt __read_most
 extern unsigned int i915_preliminary_hw_support __read_mostly;
 extern int i915_disable_power_well __read_mostly;
 extern int i915_disable_pch_pwm __read_mostly;
+extern bool i915_ignore_edp_bpp __read_mostly;
 
 extern int i915_suspend(struct drm_device *dev, pm_message_t state);
 extern int i915_resume(struct drm_device *dev);
diff -Nurp linux-3.10.10.0001/drivers/gpu/drm/i915/intel_display.c linux-3.10.10.0002/drivers/gpu/drm/i915/intel_display.c
--- linux-3.10.10.0001/drivers/gpu/drm/i915/intel_display.c	2013-09-03 12:34:53.814769840 +0300
+++ linux-3.10.10.0002/drivers/gpu/drm/i915/intel_display.c	2013-09-03 12:37:54.218612933 +0300
@@ -8929,6 +8929,16 @@ static void quirk_no_pcm_pwm_enable(stru
 		i915_disable_pch_pwm = 1;
 }
 
+/*
+ * Some machines (e.g. Asus TX300) incorrectly return 18bpp in UEFI mode
+ * from vbe edp data
+ */
+static void quirk_incorrect_edp_bpp_enable(struct drm_device *dev)
+{
+	struct drm_i915_private *dev_priv = dev->dev_private;
+	dev_priv->quirks |= QUIRK_INCORRECT_EDP_BPP_ENABLE;
+	DRM_INFO("applying INCORRECT_EDP_BPP_ENABLE quirk\n");
+}
 struct intel_quirk {
 	int device;
 	int subsystem_vendor;
@@ -9003,6 +9013,9 @@ static struct intel_quirk intel_quirks[]
 	{ 0x0116, 0x1028, 0x052e, quirk_no_pcm_pwm_enable },
 	/* Dell XPS13 HD and XPS13 FHD Ivy Bridge */
 	{ 0x0166, 0x1028, 0x058b, quirk_no_pcm_pwm_enable },
+
+	/* Asus TX300 15b7 */
+	{ 0x0166, 0x1043, 0x15b7, quirk_incorrect_edp_bpp_enable },
 };
 
 static void intel_init_quirks(struct drm_device *dev)
diff -Nurp linux-3.10.10.0001/drivers/gpu/drm/i915/intel_dp.c linux-3.10.10.0002/drivers/gpu/drm/i915/intel_dp.c
--- linux-3.10.10.0001/drivers/gpu/drm/i915/intel_dp.c	2013-07-01 01:13:29.000000000 +0300
+++ linux-3.10.10.0002/drivers/gpu/drm/i915/intel_dp.c	2013-09-03 12:39:16.350353371 +0300
@@ -702,7 +702,7 @@ intel_dp_compute_config(struct intel_enc
 	/* Walk through all bpp values. Luckily they're all nicely spaced with 2
 	 * bpc in between. */
 	bpp = min_t(int, 8*3, pipe_config->pipe_bpp);
-	if (is_edp(intel_dp) && dev_priv->edp.bpp)
+	if (is_edp(intel_dp) && dev_priv->edp.bpp && !i915_ignore_edp_bpp && !(dev_priv->quirks & QUIRK_INCORRECT_EDP_BPP_ENABLE))
 		bpp = min_t(int, bpp, dev_priv->edp.bpp);
 
 	for (; bpp >= 6*3; bpp -= 2*3) {
